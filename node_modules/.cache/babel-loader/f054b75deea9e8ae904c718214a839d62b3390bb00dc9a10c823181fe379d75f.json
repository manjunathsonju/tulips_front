{"ast":null,"code":"var _jsxFileName = \"/var/www/tulipstestlogin/src/components/CountryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryList = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [cities, setCities] = useState([]);\n  const [newCountry, setNewCountry] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n\n  // Fetch countries from the backend\n  const fetchCountries = () => {\n    axios.get('http://localhost:8000/api/countries').then(response => {\n      setCountries(response.data);\n    }).catch(error => {\n      console.error('There was an error fetching the countries!', error);\n    });\n  };\n\n  // Fetch cities based on the selected country\n  const fetchCities = countryId => {\n    axios.get(`http://localhost:8000/api/countries/${countryId}/cities`).then(response => {\n      setCities(response.data);\n    }).catch(error => {\n      console.error('There was an error fetching the cities!', error);\n    });\n  };\n\n  // Handle country selection and fetch cities\n  const handleCountrySelect = e => {\n    const countryId = e.target.value;\n    setSelectedCountry(countryId);\n    fetchCities(countryId);\n  };\n\n  // Add new country\n  const addCountry = e => {\n    e.preventDefault();\n    axios.post('http://localhost:8000/api/countries', {\n      name: newCountry\n    }).then(response => {\n      setCountries([...countries, response.data]);\n      setNewCountry('');\n      setError('');\n    }).catch(err => {\n      setError('Error adding country, it may already exist.');\n    });\n  };\n\n  // Add new city\n  const addCity = e => {\n    e.preventDefault();\n    if (!selectedCountry) {\n      setError('Please select a country first.');\n      return;\n    }\n    axios.post('http://localhost:8000/api/cities', {\n      name: newCity,\n      country_id: selectedCountry\n    }).then(response => {\n      setCities([...cities, response.data]);\n      setNewCity('');\n      setError('');\n    }).catch(err => {\n      setError('Error adding city.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Country and City Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addCountry,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          className: \"form-label\",\n          children: \"Add Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"country\",\n          value: newCountry,\n          onChange: e => setNewCountry(e.target.value),\n          placeholder: \"Enter country name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Add Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        onChange: handleCountrySelect,\n        value: selectedCountry,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.id,\n          children: country.name\n        }, country.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), selectedCountry && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mt-3\",\n      onSubmit: addCity,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          className: \"form-label\",\n          children: \"Add City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"city\",\n          value: newCity,\n          onChange: e => setNewCity(e.target.value),\n          placeholder: \"Enter city name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group mt-3\",\n      children: cities.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: city.name\n      }, city.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryList, \"S10zc/3m9Dde9vnkKczkB31Q9LU=\");\n_c = CountryList;\nexport default CountryList;\nvar _c;\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CountryList","_s","countries","setCountries","selectedCountry","setSelectedCountry","cities","setCities","newCountry","setNewCountry","newCity","setNewCity","error","setError","fetchCountries","get","then","response","data","catch","console","fetchCities","countryId","handleCountrySelect","e","target","value","addCountry","preventDefault","post","name","err","addCity","country_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","map","country","city","_c","$RefreshReg$"],"sources":["/var/www/tulipstestlogin/src/components/CountryList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CountryList = () => {\n    const [countries, setCountries] = useState([]);\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [cities, setCities] = useState([]);\n    const [newCountry, setNewCountry] = useState('');\n    const [newCity, setNewCity] = useState('');\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        fetchCountries();\n    }, []);\n\n    // Fetch countries from the backend\n    const fetchCountries = () => {\n        axios.get('http://localhost:8000/api/countries')\n            .then(response => {\n                setCountries(response.data);\n            })\n            .catch(error => {\n                console.error('There was an error fetching the countries!', error);\n            });\n    };\n\n    // Fetch cities based on the selected country\n    const fetchCities = (countryId) => {\n        axios.get(`http://localhost:8000/api/countries/${countryId}/cities`)\n            .then(response => {\n                setCities(response.data);\n            })\n            .catch(error => {\n                console.error('There was an error fetching the cities!', error);\n            });\n    };\n\n    // Handle country selection and fetch cities\n    const handleCountrySelect = (e) => {\n        const countryId = e.target.value;\n        setSelectedCountry(countryId);\n        fetchCities(countryId);\n    };\n\n    // Add new country\n    const addCountry = (e) => {\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/countries', { name: newCountry })\n            .then(response => {\n                setCountries([...countries, response.data]);\n                setNewCountry('');\n                setError('');\n            })\n            .catch(err => {\n                setError('Error adding country, it may already exist.');\n            });\n    };\n\n    // Add new city\n    const addCity = (e) => {\n        e.preventDefault();\n        if (!selectedCountry) {\n            setError('Please select a country first.');\n            return;\n        }\n\n        axios.post('http://localhost:8000/api/cities', {\n            name: newCity,\n            country_id: selectedCountry\n        })\n        .then(response => {\n            setCities([...cities, response.data]);\n            setNewCity('');\n            setError('');\n        })\n        .catch(err => {\n            setError('Error adding city.');\n        });\n    };\n\n    return (\n        <div className=\"container\">\n            <h2>Country and City Management</h2>\n\n            {/* Add Country Form */}\n            <form onSubmit={addCountry}>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"country\" className=\"form-label\">Add Country</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"country\"\n                        value={newCountry}\n                        onChange={(e) => setNewCountry(e.target.value)}\n                        placeholder=\"Enter country name\"\n                    />\n                </div>\n                {error && <div className=\"alert alert-danger\">{error}</div>}\n                <button type=\"submit\" className=\"btn btn-primary\">Add Country</button>\n            </form>\n\n            {/* Country Dropdown */}\n            <div className=\"mt-4\">\n                <label>Select Country:</label>\n                <select className=\"form-control\" onChange={handleCountrySelect} value={selectedCountry}>\n                    <option value=\"\">Select Country</option>\n                    {countries.map(country => (\n                        <option key={country.id} value={country.id}>\n                            {country.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            {/* Add City Form */}\n            {selectedCountry && (\n                <form className=\"mt-3\" onSubmit={addCity}>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"city\" className=\"form-label\">Add City</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"city\"\n                            value={newCity}\n                            onChange={(e) => setNewCity(e.target.value)}\n                            placeholder=\"Enter city name\"\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Add City</button>\n                </form>\n            )}\n\n            {/* City List */}\n            <ul className=\"list-group mt-3\">\n                {cities.map(city => (\n                    <li key={city.id} className=\"list-group-item\">\n                        {city.name}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default CountryList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}