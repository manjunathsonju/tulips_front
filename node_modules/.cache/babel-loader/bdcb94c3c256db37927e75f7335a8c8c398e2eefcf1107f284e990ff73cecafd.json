{"ast":null,"code":"var _jsxFileName = \"/var/www/tulipstestlogin/src/components/CountryCityPopulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryCityPopulation = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [ageGroups, setAgeGroups] = useState([{\n    id: 1,\n    label: '0-18'\n  }, {\n    id: 2,\n    label: '19-35'\n  }, {\n    id: 3,\n    label: '36-60'\n  }, {\n    id: 4,\n    label: '60+'\n  }]);\n  const [selectedAgeGroup, setSelectedAgeGroup] = useState('');\n  const [femalePopulation, setFemalePopulation] = useState('');\n  const [malePopulation, setMalePopulation] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n  const fetchCountries = () => {\n    axios.get('http://localhost:8000/api/countries').then(response => {\n      setCountries(response.data);\n    }).catch(error => {\n      console.error('There was an error fetching the countries!', error);\n    });\n  };\n  const fetchCities = countryId => {\n    axios.get(`http://localhost:8000/api/countries/${countryId}/cities`).then(response => {\n      setCities(response.data);\n      setSelectedCity(''); // Reset selected city when country changes\n    }).catch(error => {\n      console.error('There was an error fetching the cities!', error);\n    });\n  };\n  const handleCountrySelect = e => {\n    const countryId = e.target.value;\n    setSelectedCountry(countryId);\n    fetchCities(countryId); // Fetch cities based on selected country\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!selectedCountry || !selectedCity || !selectedAgeGroup || !femalePopulation || !malePopulation) {\n      setError('All fields are required.');\n      return;\n    }\n    const formData = {\n      country_id: selectedCountry,\n      city_id: selectedCity,\n      age_group: selectedAgeGroup,\n      female_population: femalePopulation,\n      male_population: malePopulation\n    };\n    axios.post('http://localhost:8000/api/population', formData).then(response => {\n      setSuccessMessage('Population data saved successfully!');\n      setError('');\n      // Reset form\n      setSelectedCountry('');\n      setSelectedCity('');\n      setSelectedAgeGroup('');\n      setFemalePopulation('');\n      setMalePopulation('');\n      setCities([]); // Reset cities list\n    }).catch(error => {\n      setError('There was an error submitting the data.');\n      setSuccessMessage('');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Country, City, Age Group & Population\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country\",\n        children: \"Select Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"country\",\n        className: \"form-control\",\n        value: selectedCountry,\n        onChange: handleCountrySelect,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.id,\n          children: country.name\n        }, country.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), selectedCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"Select City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"city\",\n        className: \"form-control\",\n        value: selectedCity,\n        onChange: e => setSelectedCity(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.id,\n          children: city.name\n        }, city.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ageGroup\",\n        children: \"Select Age Group:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"ageGroup\",\n        className: \"form-control\",\n        value: selectedAgeGroup,\n        onChange: e => setSelectedAgeGroup(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Age Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), ageGroups.map(ageGroup => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: ageGroup.label,\n          children: ageGroup.label\n        }, ageGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"femalePopulation\",\n        children: \"Enter Female Population:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"femalePopulation\",\n        className: \"form-control\",\n        value: femalePopulation,\n        onChange: e => setFemalePopulation(e.target.value),\n        placeholder: \"Enter female population\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"malePopulation\",\n        children: \"Enter Male Population:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"malePopulation\",\n        className: \"form-control\",\n        value: malePopulation,\n        onChange: e => setMalePopulation(e.target.value),\n        placeholder: \"Enter male population\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryCityPopulation, \"s6IakzXDtApk9Hd7BBwHdDtshXk=\");\n_c = CountryCityPopulation;\nexport default CountryCityPopulation;\nvar _c;\n$RefreshReg$(_c, \"CountryCityPopulation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CountryCityPopulation","_s","countries","setCountries","selectedCountry","setSelectedCountry","cities","setCities","selectedCity","setSelectedCity","ageGroups","setAgeGroups","id","label","selectedAgeGroup","setSelectedAgeGroup","femalePopulation","setFemalePopulation","malePopulation","setMalePopulation","error","setError","successMessage","setSuccessMessage","fetchCountries","get","then","response","data","catch","console","fetchCities","countryId","handleCountrySelect","e","target","value","handleSubmit","preventDefault","formData","country_id","city_id","age_group","female_population","male_population","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","map","country","name","city","ageGroup","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/var/www/tulipstestlogin/src/components/CountryCityPopulation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CountryCityPopulation = () => {\n    const [countries, setCountries] = useState([]);\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [cities, setCities] = useState([]);\n    const [selectedCity, setSelectedCity] = useState('');\n    const [ageGroups, setAgeGroups] = useState([\n        { id: 1, label: '0-18' },\n        { id: 2, label: '19-35' },\n        { id: 3, label: '36-60' },\n        { id: 4, label: '60+' }\n    ]);\n    const [selectedAgeGroup, setSelectedAgeGroup] = useState('');\n    const [femalePopulation, setFemalePopulation] = useState('');\n    const [malePopulation, setMalePopulation] = useState('');\n    const [error, setError] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    useEffect(() => {\n        fetchCountries();\n    }, []);\n\n    const fetchCountries = () => {\n        axios.get('http://localhost:8000/api/countries')\n            .then(response => {\n                setCountries(response.data);\n            })\n            .catch(error => {\n                console.error('There was an error fetching the countries!', error);\n            });\n    };\n\n    const fetchCities = (countryId) => {\n        axios.get(`http://localhost:8000/api/countries/${countryId}/cities`)\n            .then(response => {\n                setCities(response.data);\n                setSelectedCity(''); // Reset selected city when country changes\n            })\n            .catch(error => {\n                console.error('There was an error fetching the cities!', error);\n            });\n    };\n\n    const handleCountrySelect = (e) => {\n        const countryId = e.target.value;\n        setSelectedCountry(countryId);\n        fetchCities(countryId); // Fetch cities based on selected country\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!selectedCountry || !selectedCity || !selectedAgeGroup || !femalePopulation || !malePopulation) {\n            setError('All fields are required.');\n            return;\n        }\n\n        const formData = {\n            country_id: selectedCountry,\n            city_id: selectedCity,\n            age_group: selectedAgeGroup,\n            female_population: femalePopulation,\n            male_population: malePopulation,\n        };\n\n        axios.post('http://localhost:8000/api/population', formData)\n            .then(response => {\n                setSuccessMessage('Population data saved successfully!');\n                setError('');\n                // Reset form\n                setSelectedCountry('');\n                setSelectedCity('');\n                setSelectedAgeGroup('');\n                setFemalePopulation('');\n                setMalePopulation('');\n                setCities([]); // Reset cities list\n            })\n            .catch(error => {\n                setError('There was an error submitting the data.');\n                setSuccessMessage('');\n            });\n    };\n\n    return (\n        <div className=\"container\">\n            <h2>Country, City, Age Group & Population</h2>\n\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n            {successMessage && <div className=\"alert alert-success\">{successMessage}</div>}\n\n            {/* Country Dropdown */}\n            <div className=\"mb-3\">\n                <label htmlFor=\"country\">Select Country:</label>\n                <select\n                    id=\"country\"\n                    className=\"form-control\"\n                    value={selectedCountry}\n                    onChange={handleCountrySelect}\n                >\n                    <option value=\"\">Select Country</option>\n                    {countries.map(country => (\n                        <option key={country.id} value={country.id}>\n                            {country.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            {/* City Dropdown */}\n            {selectedCountry && (\n                <div className=\"mb-3\">\n                    <label htmlFor=\"city\">Select City:</label>\n                    <select\n                        id=\"city\"\n                        className=\"form-control\"\n                        value={selectedCity}\n                        onChange={(e) => setSelectedCity(e.target.value)}\n                    >\n                        <option value=\"\">Select City</option>\n                        {cities.map(city => (\n                            <option key={city.id} value={city.id}>\n                                {city.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            )}\n\n            {/* Age Group Dropdown */}\n            <div className=\"mb-3\">\n                <label htmlFor=\"ageGroup\">Select Age Group:</label>\n                <select\n                    id=\"ageGroup\"\n                    className=\"form-control\"\n                    value={selectedAgeGroup}\n                    onChange={(e) => setSelectedAgeGroup(e.target.value)}\n                >\n                    <option value=\"\">Select Age Group</option>\n                    {ageGroups.map(ageGroup => (\n                        <option key={ageGroup.id} value={ageGroup.label}>\n                            {ageGroup.label}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            {/* Female Population Input */}\n            <div className=\"mb-3\">\n                <label htmlFor=\"femalePopulation\">Enter Female Population:</label>\n                <input\n                    type=\"number\"\n                    id=\"femalePopulation\"\n                    className=\"form-control\"\n                    value={femalePopulation}\n                    onChange={(e) => setFemalePopulation(e.target.value)}\n                    placeholder=\"Enter female population\"\n                />\n            </div>\n\n            {/* Male Population Input */}\n            <div className=\"mb-3\">\n                <label htmlFor=\"malePopulation\">Enter Male Population:</label>\n                <input\n                    type=\"number\"\n                    id=\"malePopulation\"\n                    className=\"form-control\"\n                    value={malePopulation}\n                    onChange={(e) => setMalePopulation(e.target.value)}\n                    placeholder=\"Enter male population\"\n                />\n            </div>\n\n            {/* Submit Button */}\n            <button className=\"btn btn-primary\" onClick={handleSubmit}>Submit</button>\n        </div>\n    );\n};\n\nexport default CountryCityPopulation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}